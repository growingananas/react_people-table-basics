{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/MainNavigation/MainNavigation.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PersonInfo/PersonInfo.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","MainNavigation","role","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","slug","name","sex","PersonInfo","selectedPersonSlug","born","died","fatherName","motherName","mother","father","PeopleTable","people","useParams","map","PeoplePage","useState","setPeople","isLoading","setIsLoading","error","setError","useEffect","fetchPeople","visiblePeople","find","m","f","length","HomePage","NotFoundPage","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.79290f5a.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ninterface Props {\n  to: string;\n  text: string;\n}\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames('navbar-item',\n      { 'has-background-grey-lighter': isActive })}\n  >\n    {text}\n  </NavLink>\n);\n","import React from 'react';\nimport { PageNavLink } from '../PageNavLink/PageNavLink';\n\nexport const MainNavigation: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n\n        <PageNavLink to=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { slug, name, sex } = person;\n\n  return (\n    <NavLink\n      to={`/people/${slug}`}\n      className={classNames({ 'has-text-danger': sex === 'f' })}\n    >\n      {name}\n    </NavLink>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ninterface Props {\n  person: Person;\n  selectedPersonSlug: string;\n}\n\nexport const PersonInfo: React.FC<Props> = ({ person, selectedPersonSlug }) => {\n  const {\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n    mother,\n    father,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames(\n        { 'has-background-warning': selectedPersonSlug === slug },\n      )}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? (\n          <PersonLink person={mother} />\n        ) : (\n          motherName || '-'\n        )}\n      </td>\n      <td>\n        {father ? (\n          <PersonLink person={father} />\n        ) : (\n          fatherName || '-'\n        )}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonInfo } from '../PersonInfo';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug = '' } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonInfo\n            key={person.slug}\n            person={person}\n            selectedPersonSlug={slug}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { PeopleTable } from '../components/PeopleTable/PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<null | string>(null);\n\n  useEffect(() => {\n    const fetchPeople = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await getPeople();\n\n        setPeople(response);\n      } catch {\n        setError('Something went wrong');\n      }\n\n      setIsLoading(false);\n    };\n\n    fetchPeople();\n  }, []);\n\n  const visiblePeople = people.map(person => {\n    const mother = people.find(m => person.motherName === m.name);\n    const father = people.find(f => person.fatherName === f.name);\n\n    return {\n      ...person,\n      mother,\n      father,\n    };\n  });\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              {error}\n            </p>\n          )}\n\n          {!isLoading && !error && people.length === 0 && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {visiblePeople.length > 0 && <PeopleTable people={visiblePeople} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import './App.scss';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport { MainNavigation } from './components/MainNavigation';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <MainNavigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}